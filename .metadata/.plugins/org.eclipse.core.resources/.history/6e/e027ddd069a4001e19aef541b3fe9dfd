package med.voll.api.medico;

import jakarta.persistence.Embedded;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.Valid;
import lombok.AllArgsConstructor;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import med.voll.api.endereco.DadosEndereco;
import med.voll.api.endereco.Endereco;

@Table(name = "Medicos")
@Entity(name = "Medico")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@EqualsAndHashCode(of = "id")
public class Medico {

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)

	private Long id;
	private String nome;
	private String email;
	private String telefone;
	private String crm;

	@Enumerated(EnumType.STRING)
	private Especialidade especialidade;

	@Embedded
	private Endereco endereco;

	private Boolean ativo;

	public Medico(DadosCadastroMedico dadosMedico) {

		this.ativo = true;
		this.nome = dadosMedico.nome();
		this.email = dadosMedico.email();
		this.telefone = dadosMedico.telefone();
		this.crm = dadosMedico.crm();
		this.especialidade = dadosMedico.especialidade();
		this.endereco = new Endereco(dadosMedico.endereco());
	}
	
	public Medico() {
		// TODO Auto-generated constructor stub
	}

	

	public void atualizarInformacoes(@Valid DadosAtualizacaoMedico dados) {

		if (dados.nome() != null) {
			this.nome = dados.nome();
		}
		if (dados.telefone() != null) {
			this.telefone = dados.telefone();
		}
		if (dados.endereco() != null) {

			this.endereco.atualizarInformacoes(dados.endereco());
		}

	}

	public void excluir() {
		this.ativo = false;
	}

}
